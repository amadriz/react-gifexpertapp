{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.jsx","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.jsx","GifExpertApp.jsx","index.jsx"],"names":["AddCategory","setcategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","props","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"yMA+BeA,EA5BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAElB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAElBA,EAAEC,iBAGFN,GAAc,SAAAO,GAAU,OAAML,GAAN,mBAAqBK,OAC7CJ,EAAc,KAId,SACI,uBACIK,KAAK,OACLC,MAAOP,EACPQ,SAlBc,SAAEL,GACxBF,EAAeE,EAAEM,OAAOF,a,+BCRnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGII,MAAOF,GAHX,cAGbG,EAHa,gBAIEA,EAASC,OAJX,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCcLO,EAZK,SAACC,GAIjB,OAFHC,QAAQC,IAAIF,EAAMJ,MAAOI,EAAMd,KAGxB,sBAAKiB,UAAU,yCAAf,UACI,qBAAKC,IAAMJ,EAAMd,IAAMmB,IAAML,EAAMJ,QACnC,4BAAKI,EAAMJ,YCuBRU,EA5BC,SAAC,GAAkB,IAAhBtB,EAAe,EAAfA,SAEf,ECHwB,SAAEA,GAE1B,MAA0BZ,mBAAS,CAC/BmB,KAAM,GACNgB,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAuBJ,OAlBIC,qBAAW,WAET3B,EAASC,GACN2B,MAAM,SAAAC,GAEHC,YAAW,WAEXJ,EAAS,CACLlB,KAAMqB,EACNL,SAAS,MAEf,UAIP,CAACvB,IAGGwB,EDtBuBM,CAAc9B,GAAhCO,EAAR,EAAQA,KAAMgB,EAAd,EAAcA,QAUd,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAoDnB,IAClDuB,GAAW,mBAAGJ,UAAU,kCAAb,qBACjB,qBAAKA,UAAU,YAAf,SAEYZ,EAAKE,KAAK,SAAAC,GAAG,OAET,aADA,CACC,EAAD,eAAiCA,GAAdA,EAAIC,aEWhCoB,EA/BM,WAIjB,MAAoC3C,mBAAS,CAAC,cAA9C,mBAAOM,EAAP,KAAmBP,EAAnB,KAOA,OACI,qCACI,4CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGE,6BAEMO,EAAWe,KAAK,SAAAT,GAAQ,OAEpB,aADA,CACC,EAAD,CAAwBA,SAAWA,GAArBA,YCrBtCgC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.18cf1964.chunk.js","sourcesContent":["import React, { useState  } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setcategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value )\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        // Para que el form no  recargue \r\n        e.preventDefault();\r\n\r\n        // console.log('submit hecho');\r\n        setcategories(categories => [ inputValue, ...categories ]);\r\n        setInputValue('');\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInputChange } \r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddCategory\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setcategories: PropTypes.func.isRequired\r\n}","export const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=WEW6L55MxsW1LDQyw6sOLwTtBVAeauze`;\r\n    const response = await fetch( url );\r\n    const {data} = await response.json();\r\n    \r\n    const gifs = data.map( img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}\r\n","import React from 'react';\r\n\r\nconst GifGridItem = (props) => {\r\n\r\n console.log(props.title, props.url );\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ props.url } alt={ props.title } />\r\n            <p>{ props.title }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    const { data, loading } = useFetchGifs( category );\r\n\r\n    \r\n\r\n    // useEffect( () => {\r\n    //     // cuando se abre el componete obtenga los gifs y coloque las imagenes\r\n    //     getGifs( category )\r\n    //         .then( setImages )\r\n    // }, [ category ])\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n            { loading && <p className=\"animate_animated animate__flash\">loading</p>}\r\n        <div className=\"card-grid\">\r\n                {\r\n                    data.map( img => (\r\n                        // <li key={img.id}>{ img.title }</li>\r\n                        <GifGridItem key={ img.id } { ...img }/>\r\n                    ))\r\n                }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n      getGifs( category )\r\n        .then( imgs => {\r\n\r\n            setTimeout(() => {\r\n                \r\n            setstate({\r\n                data: imgs,\r\n                loading: false\r\n            });\r\n        },2000 );\r\n    \r\n    })\r\n\r\n}, [category])\r\n\r\n\r\nreturn state; \r\n\r\n}","import React, {useState}  from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    // const categories = ['uno', 'dos', 'tres', 'cuatro'];\r\n\r\n    const [categories, setcategories] = useState(['Metallica']);\r\n\r\n    // const handleAdd = () => {\r\n    //         setcategories([...categories, 'cinco']);\r\n    //         console.log(categories);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h1>Gif Expert</h1>\r\n            <AddCategory setcategories={setcategories} />\r\n            <hr />\r\n            {/* <button onClick={ handleAdd }>Agregar</button> */}\r\n\r\n              <ol>\r\n                  { \r\n                    categories.map( category => (\r\n                        // return <li key={index}>{category}</li>\r\n                        <GifGrid key={category} category={ category } />\r\n                    ))\r\n                  }\r\n              </ol>  \r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render( \n    <GifExpertApp /> ,\n    document.getElementById('root')\n);"],"sourceRoot":""}